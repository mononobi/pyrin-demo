#################################### GENERAL ####################################

[alembic]

# path to migration scripts.
script_location: null

# template used to generate migration files.
file_template: %%(slug)s_%%(rev)s

# timezone to use when rendering the date
# within the migration file as well as the filename.
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime.
timezone: UTC

# max length of characters to apply to the 'slug' field.
truncate_slug_length: 50

# set to 'True' to run the environment during
# the 'revision' command, regardless of autogenerate.
revision_environment: True

# set to 'True' to allow .pyc and .pyo files without a source .py
# file to be detected as revisions in the versions/ directory.
sourceless: False

# version location specification. this defaults to migrations/versions.
# when using multiple version directories, initial revisions must be
# specified with --version-path argument.
#version_locations: %(script_location)s/develop %(script_location)s/production %(script_location)s/versions

# the output encoding used when revision files
# are written from script.py.mako
output_encoding: utf-8

# compare column types to detect changes.
compare_type: True

# compare database server default value to detect changes.
compare_server_default: True

# use twophase ddl transactions.
# it is not supported on all databases.
use_twophase: False

# if True, commands which alter elements within a table
# will be placed under a 'with batch_alter_table()'.
render_as_batch: False

# if True, autogenerate will scan across all schemas located by the sqlalchemy.
# and include all differences in tables found across all those schemas.
# this will result in all tables and other objects that are not defined in your
# application's metadata, to be dropped from database, so enable it with cautious.
include_schemas: False

#################################### DATABASE ####################################
# during each migration, these values will be filled by active databases
# in database.ini and database.binds.ini. so it's important to correctly
# configure connection strings and active environment in those files. the
# default engine name should be always referenced as 'default' in this file.
# it must be a list of database engine names. for example:
# ['default', 'engine2'] or ['default']
databases: ['default']

################################# POST-WRITE-HOOKS #################################

[post_write_hooks]

# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts. see the documentation for further
# detail and examples.

# format using 'black' - use the console_scripts runner, against the 'black' entrypoint.
# hooks: black
# black.type: console_scripts
# black.entrypoint: black
# black.options: -l 79