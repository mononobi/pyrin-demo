[general]

# default rsa key length in bits.
rsa_default_key_length: 2048

# default size of generated secure random value in bytes.
default_secure_random_size: 32

# secret key.
secret_key: Er-bKT9rmJil9KCAfxVErzEDzVxWjuj-mITSem5ENfY=

# trusted ips to accept requests from.
# example: (*, 192.168.3.43)
trusted_ips: (*,)

# set cookies to httponly.
session_cookie_httponly: true

# set cookies to secure.
session_cookie_secure: true

[hashing]

# rounds to make hashes using bcrypt.
bcrypt_rounds: 13

# rounds to make hashes using pbkdf2.
# the golden rule to be followed is 2^(year-2000) iterations.
pbkdf2_rounds: 500000

# hashing algorithm to be used with pbkdf2.
pbkdf2_internal_algorithm: sha256

# pbkdf2 salt length in bytes.
pbkdf2_salt_length: 32

# default handler to be used for hashing.
# it could be set to: 'bcrypt', 'PBKDF2' or any other custom hashing handler.
default_hashing_handler: PBKDF2

[token]

# access token lifetime in seconds, after this duration, client must get a
# new access token by providing a refresh token to server.
# default value is 1800 seconds (30 minutes).
access_token_lifetime: 1800

# refresh token lifetime in seconds, after this duration, client must get a
# new access and refresh token by providing credentials to server.
# default value is 2592000 seconds (30 days).
refresh_token_lifetime: 2592000

# hs256 key for signing tokens.
hs256_key: T6ILgrj0GlnjSlQuWMmcluhCqznfyxXK4yoBTANQqew

# hs256 key length in bytes.
hs256_key_length = 32

# rs256 public key for decoding tokens.
rs256_public_key: -----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtRTbkxvz1gm4Z9LbRfsH\nYJG6H5BW/ng24j0oDI3I6uEnd4v0RIt8xXh9o3rAX+dezktLug6XbOdCCeGpOZn7\nKzSPaqeOvOyrPl+6YGSRBY3c5zADsvRiMLceMi0A7TJRBWptAqBnNVsFJPQinz2V\n8tHqfVp1a8Tgwp5JUOPY9brSP4RhxPXnpXO6lSbPf+0VP94tKknJvBIQDaGZnyBH\nXWKFdMKJPHoDGjB/G1Gaw+LnytWqTspnWjDOvhmev8J4zrXbdESGply8UUwsSbO/\ntiPh1LSTZRfH/J9gnpia7XBMl+L9VYYNWkYF51RIkyWQjLw/hfBnl9MD8dhPfOFY\nLwIDAQAB\n-----END PUBLIC KEY-----\n

# rs256 private key for encoding tokens.
rs256_private_key: -----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAtRTbkxvz1gm4Z9LbRfsHYJG6H5BW/ng24j0oDI3I6uEnd4v0\nRIt8xXh9o3rAX+dezktLug6XbOdCCeGpOZn7KzSPaqeOvOyrPl+6YGSRBY3c5zAD\nsvRiMLceMi0A7TJRBWptAqBnNVsFJPQinz2V8tHqfVp1a8Tgwp5JUOPY9brSP4Rh\nxPXnpXO6lSbPf+0VP94tKknJvBIQDaGZnyBHXWKFdMKJPHoDGjB/G1Gaw+LnytWq\nTspnWjDOvhmev8J4zrXbdESGply8UUwsSbO/tiPh1LSTZRfH/J9gnpia7XBMl+L9\nVYYNWkYF51RIkyWQjLw/hfBnl9MD8dhPfOFYLwIDAQABAoIBADs02qY62Xr+KqEn\nvDIhZcQZYbW4R/lj7O4D+PhB05OYkoLv66oNwXn/b3ToScYRrFnfHJ907eXZpyn7\n8oy23/y8brf8mRsEdukp+5JQz2n1fGjKtiro5MHw3ZqiRE9JyFvw9DuLnrM/U2tF\nt5xBUqnWIMljrkjSUnrPrkEYfnO5WMIMPstjVwr6746CWjEb49MZ6BHXi8OmkztL\nqlMz+A7oXkbaxME49JQEcyIHHYwtRz7SAn1H88YSxY6njOaS2Muf3lxOSNOg0tNR\nCoCHk2T1+oAHzydZuDtEskOypZB0kYT/UJRY6Y0rV4Q3BJZNYyN/7cS+ceuPupeb\n4Ti5fYECgYEA5HW2PAHjL3UopTpxtWHT4FRrUH4jcL3ZbphyntPHEjvwZ89zY+aU\ndCzcU8XtZ/dI8oRoaUIASEgLBUHKID9pY/2ZYdtHlewWjIIlz27YCz4P4S7jTF00\nj3MS8PFPMlKStvtoRAyCSKgzjq2nQJQXFEFcf6WcLIRgUrUdcJ9HMb8CgYEAyukL\n7WBpzs/6Ga+OVm6xHQmtgflU+C8tCBV6Oe+LWI4QCnG7xcJ/jq0vYfkufWeXeuOW\nGN5n88xxP6Xrq6K15J34XxK+d80hdNAz6arOd/aOcRGZeIyVkghFZ7ENFcyWW1bL\nazQpTpYzep+gBfkz7x5F+gazP8hy9A18ZtzmlZECgYEAymUuSQMzDbwxgg/A5PwC\nBN9FI05cf2jx0/TitqrP1eucE5vJkluYcUO8/cp/hHei/JcpGPcL4P1SJhoew2rq\nJ1doJzVouf0qDNjQPnDonS0iTFCJtgFsqxk7UpG1o9NbfxhDSuX6FfxNkL1vStrn\nh15QYBWLwjSUUTF7H2c8X2kCgYAL5TGfzuElEKg2zUXo50BW1XRohDdo/UsEiE3M\nC7D9lgZ2tkgtxcM4mAqJEdSZ4XLN732jI5awgjG5a36vZzCGoIQo/q5P06S8dmA0\nuKC2A6xCEKgQmx1BnF6FP6nmt0GxRRtTw5EQXFnUPHtjHkLfJ8UubSog+R1UFV5P\noW+bIQKBgHVFLtWQ5CQ+S68C1BmwVqQyVVUoordwJsddOP8eSUYVWLbGKKDX7qHl\n4LplKr2VK0EpSVtKzVp32fCsWbadFpEaGnrilUnIa931QB5mnGPclDj/AXX/W+SJ\nQwPf2Zcaf9CCwhyklltec1JrkXl9qaEltLAPS7EWYVW0S3bGcj1d\n-----END RSA PRIVATE KEY-----\n

# default handler to be used for tokens.
# it could be set to: 'HS256', 'RS256' or any other custom token handler.
default_token_handler: RS256

[encryption]

# aes128 key for encryption and decryption.
aes128_key: d5BWGoa01HdvlHRqHNlLGKcNL63xITGp9ALYwTrxcPg=

# rsa public key for encryption.
rsa256_public_key: -----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApXDJEfao09VoxveTbUkN\nFSu6BadGpVqL2OuRysy2NDIYN51owPIvNtU6T4J84nApL1ES76KlN9Vb4WMXPDry\nSjCm6hls77fUrADp0dDFsdfRIYTqV9NFYq5gdsMcqXIruvPDCRn3En1u3OeK8BGe\nTE2DNFAN8usnxktBS1l5CuTcL77bfz214f5Oy32jnGkhtqWiNBPEvl2uXM9dtFDw\nVmV901iDoDT2o0CU4r67cdGnhRRtv4cXwopgkE9C6twMRzDPJz2PuNRPMPBkSirI\nOhkt6YA3lBe6P853kJ7RWUWLNXm+HTwLGcEQ6TmizZTphh3uJfxve9EU5CAKVHSx\npQIDAQAB\n-----END PUBLIC KEY-----\n

# rsa private key for decryption.
rsa256_private_key: -----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEApXDJEfao09VoxveTbUkNFSu6BadGpVqL2OuRysy2NDIYN51o\nwPIvNtU6T4J84nApL1ES76KlN9Vb4WMXPDrySjCm6hls77fUrADp0dDFsdfRIYTq\nV9NFYq5gdsMcqXIruvPDCRn3En1u3OeK8BGeTE2DNFAN8usnxktBS1l5CuTcL77b\nfz214f5Oy32jnGkhtqWiNBPEvl2uXM9dtFDwVmV901iDoDT2o0CU4r67cdGnhRRt\nv4cXwopgkE9C6twMRzDPJz2PuNRPMPBkSirIOhkt6YA3lBe6P853kJ7RWUWLNXm+\nHTwLGcEQ6TmizZTphh3uJfxve9EU5CAKVHSxpQIDAQABAoH/GdmFkUj5GCBAPtZw\nMqM3aBds+XUplKyRLVOhdA6IaZ9qKUZvF7a/qdGnSsUYvkjIJpyEWO0Q46hyssTI\n3KBZOz5e1jUi0FHo6Pc7kY0NVrxh8NrTwuU/8itM50GVOOSd8Jgl4UYtVLZEnD+R\ndfFKyqFR3tqjU1Fq5ZDcoulYAFuBsAa5ezfRBpSaQRckWh7JMmzZ7+C2VwMUzrg+\nb3bv6PDaWkEPnMVS9mNKq/PEWR2v6V3YgCqNS1tXwb4O6m22vVNoTv8dqEdyjf51\nvKys1MJfDoquPcxxdQiG3OpgdFeqRETaXyh9cEi9qu92qm9g45vT3/29xEyW6KBc\nubUBAoGBANXWqaiHEOQRVjuSFsZGBO1rEAvpYuIf2UOjBQKeA19GFIr6StWh0HMQ\nbjb9WcHZB2ZlTrJ+5JAOJjp67rFM6ftGcvXG4k948bVzWPPB4PU31l7KQvo6Jb0L\nT0TM+7neFAFL6Y0QfgDYJxp1oXDhznp5aWZ2Nop3fz+q4ylHhxxtAoGBAMYPRcLr\nvh0OHad7Xe20toV3CHpfn+4GroV7EG1LXmHd5aqR99U/eB7hdyPqO8R5igdZB0jm\n9WTBxniObo1noTy6FoIdxVWqKFRnkPJBBy/F4YN/y7hW4M7EpbNtmyhQMMYDldNZ\neIZv2NBcEPR5OVnGYySXVSaQ3FpLDlhmFbcZAoGBAMF9xPSmiqUj/thWX183mlvO\nRa3Rl9UupmRqTS1KF5kNC6eZxT87dSe41VHSu3YJUIXZ43TmFyE2fGbsN7Gc/BeP\nbpRwSvVIZcYfQn0GkOyygrow4JwVI3LEmgySQrCzf3yQ2Rr4sltHO1LY36UJ3dC6\nraG2E7IFYNIWagg/HcWdAoGAUIuNd0OfwPkonh/RhwXi5EwQKpQQ2h/lgWsWtxvb\nejlfWQqbmyGAnC5c4UI0pCY5N9vA1qj2Ss9zAzwJQYBPVf7ngGrTAY99bzXfAGXp\nokf6+htSodjS+8OFD38XhkF2VFDI8XaFSUbbCYEndASIijXfw9W3T0PCGQZFAzYg\nxqECgYEAymJsfkdgd8UzebujCbWZurNLOVyg0wZHJFy0DokHlaBtIJbfyki1Hisx\nxl52terux1MysPtedWcH0+l2PU/HWeuUvK6YFOUfqsvJsi5w2JtXwKfcHRs/dn9e\n+hJgf9iVr+I2XZrUlpGa4ODRHvpc+2CKyGeO5Wljp8mlkriASh0=\n-----END RSA PRIVATE KEY-----\n

# default handler to be used for encryption.
# it could be set to: 'AES128', 'RSA256' or any other custom encryption handler.
default_encryption_handler: RSA256

[permission]

# synchronize application permissions with database on startup.
synchronize: true

# cache expire time for permission check service in milliseconds.
# note that if you use 'memcached' for permission check caching, this
# value must be set as seconds.
cache_expire: 1000

# cache name to be used for permission check service.
# it could be set to any of available caches:
# 'redis', 'memcached', 'complex' or any other custom cache which
# is implemented in your application.
# if set to null, permission check service will not be cached.
cache_name: complex