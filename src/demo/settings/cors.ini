[active]

selected: development

[development]

# enable cross origin resource sharing on all routes.
# if set to true, all responses would contain cors headers.
# this could be overridden on each '@api' decorated method.
enable: true

# specifies that if cors is enabled for a route but origin request header
# is not provided, send '*' origin through response headers if '*' is in allowed origins.
# note that '*' will only be sent if 'allow_credentials' is false for that route.
# this could be overridden on each '@api' decorated method.
always_send: true

# a list of allowed origins for cross origin resource sharing.
# it could be set to '[*]' to allow all anonymous requests where authentication
# is not required or set to valid urls to be allowed for authenticated
# or anonymous requests. for example: '[my.server.com, your.server.com]'.
# this could be overridden on each '@api' decorated method.
allowed_origins: [*]

# a list of headers that can be set in the actual request by the client.
# these request headers are allowed by default:
# Accept, Accept-Language, Content-Language, Content-Type.
# if you want clients to be able to send other request headers, you have to list them here.
# note that for protected routes, 'Authorization' header will be added to this list automatically.
# '[*]' only could be used for anonymous requests where authentication is not required.
# this could be overridden on each '@api' decorated method.
allowed_headers: [*]

# a list of headers that can be exposed as part of the response by listing their names.
# these response headers are allowed by default:
# Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified, Pragma.
# if you want clients to be able to access other response headers, you have to list them here.
# '[*]' only could be used for anonymous requests where authentication is not required.
# this could be overridden on each '@api' decorated method.
exposed_headers: [*]

# used to tell the browsers to expose the response to front-end javascript code when
# the request’s credentials mode 'Request.credentials' is 'include'.
# credentials are actually cookies, authorization headers or TLS(Transport Layer Security)
# client certificates.
# this could be overridden on each '@api' decorated method.
allow_credentials: false

# how long the result of cross origin requests could be cached in seconds.
# each web browser has its own max limit for this.
# if set to '-1' caching will be disabled.
# if set to null, this cors header will not be added into response.
# this could be overridden on each '@api' decorated method.
max_age: null

[production]

# enable cross origin resource sharing on all routes.
# if set to true, all responses would contain cors headers.
# this could be overridden on each '@api' decorated method.
enable: true

# specifies that if cors is enabled for a route but origin request header
# is not provided, send '*' origin through response headers if '*' is in allowed origins.
# note that '*' will only be sent if 'allow_credentials' is false for that route.
# this could be overridden on each '@api' decorated method.
always_send: true

# a list of allowed origins for cross origin resource sharing.
# it could be set to '[*]' to allow all anonymous requests where authentication
# is not required or set to valid urls to be allowed for authenticated
# or anonymous requests. for example: '[my.server.com, your.server.com]'.
# this could be overridden on each '@api' decorated method.
allowed_origins: [*]

# a list of headers that can be set in the actual request by the client.
# these request headers are allowed by default:
# Accept, Accept-Language, Content-Language, Content-Type.
# if you want clients to be able to send other request headers, you have to list them here.
# note that for protected routes, 'Authorization' header will be added to this list automatically.
# '[*]' only could be used for anonymous requests where authentication is not required.
# this could be overridden on each '@api' decorated method.
allowed_headers: [*]

# a list of headers that can be exposed as part of the response by listing their names.
# these response headers are allowed by default:
# Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified, Pragma.
# if you want clients to be able to access other response headers, you have to list them here.
# '[*]' only could be used for anonymous requests where authentication is not required.
# this could be overridden on each '@api' decorated method.
exposed_headers: [*]

# used to tell the browsers to expose the response to front-end javascript code when
# the request’s credentials mode 'Request.credentials' is 'include'.
# credentials are actually cookies, authorization headers or TLS(Transport Layer Security)
# client certificates.
# this could be overridden on each '@api' decorated method.
allow_credentials: false

# how long the result of cross origin requests could be cached in seconds.
# each web browser has its own max limit for this.
# if set to '-1' caching will be disabled.
# if set to null, this cors header will not be added into response.
# this could be overridden on each '@api' decorated method.
max_age: null

[test]

# enable cross origin resource sharing on all routes.
# if set to true, all responses would contain cors headers.
# this could be overridden on each '@api' decorated method.
enable: true

# specifies that if cors is enabled for a route but origin request header
# is not provided, send '*' origin through response headers if '*' is in allowed origins.
# note that '*' will only be sent if 'allow_credentials' is false for that route.
# this could be overridden on each '@api' decorated method.
always_send: true

# a list of allowed origins for cross origin resource sharing.
# it could be set to '[*]' to allow all anonymous requests where authentication
# is not required or set to valid urls to be allowed for authenticated
# or anonymous requests. for example: '[my.server.com, your.server.com]'.
# this could be overridden on each '@api' decorated method.
allowed_origins: [*]

# a list of headers that can be set in the actual request by the client.
# these request headers are allowed by default:
# Accept, Accept-Language, Content-Language, Content-Type.
# if you want clients to be able to send other request headers, you have to list them here.
# note that for protected routes, 'Authorization' header will be added to this list automatically.
# '[*]' only could be used for anonymous requests where authentication is not required.
# this could be overridden on each '@api' decorated method.
allowed_headers: [*]

# a list of headers that can be exposed as part of the response by listing their names.
# these response headers are allowed by default:
# Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified, Pragma.
# if you want clients to be able to access other response headers, you have to list them here.
# '[*]' only could be used for anonymous requests where authentication is not required.
# this could be overridden on each '@api' decorated method.
exposed_headers: [*]

# used to tell the browsers to expose the response to front-end javascript code when
# the request’s credentials mode 'Request.credentials' is 'include'.
# credentials are actually cookies, authorization headers or TLS(Transport Layer Security)
# client certificates.
# this could be overridden on each '@api' decorated method.
allow_credentials: false

# how long the result of cross origin requests could be cached in seconds.
# each web browser has its own max limit for this.
# if set to '-1' caching will be disabled.
# if set to null, this cors header will not be added into response.
# this could be overridden on each '@api' decorated method.
max_age: null
